#!/bin/bash

set -eEuo pipefail
exec 1>&2

declare -r regex='^(feat|fix|refactor|perf|chore|docs|lint|style|test)(\([^)\s]+\))?:'

declare -r message_file=${1:-}

function isGood() {
  if [[ -n $message_file ]]; then
    grep -qEi "$regex" "$message_file"
  else
    local -r subject=$(git show --no-patch --pretty='format:%s')
    echo "$subject" | grep -qEi "$regex"
  fi
}

if ! isGood; then
  cat <<\EOF
Error: Invalid commit subject message.

Commit messages should like one of the following example.
They may optionally have a parenthetical item after the type.

  feat: add beta sequence
  feat(beta): add sequence
  fix: remove broken confirmation message
  fix(ui): remove broken confirmation message
  refactor: share logic between 4d3d3d3 and flarhgunnstow
  perf: improved performance of the zabbit

  chore: add Oyster build script
  docs: explain hat wobble
  lint: convert tabs to spaces
  style: convert tabs to spaces
  test: ensure Tayne retains clothing

EOF
  exit 1
fi
